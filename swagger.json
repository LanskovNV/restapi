{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0", 
    "title": "restapi",
    "description": "Simple crud restapi with bearer authorization",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Employees",
      "description": "API for employees"
    },
    {
      "name": "Auth",
      "description": "API for authorization"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/employees": {
      "post": {
        "tags": [
          "Employees"
        ],
        "description": "Create new employees",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New employee is created",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "Create new employees",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name filter",
            "type": "string"
          },
          {
            "name": "surname",
            "in": "query",
            "description": "Surname filter",
            "type": "string"
          },
          {
            "name": "page_num",
            "in": "query",
            "description": "Number of page to return",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Emplo",
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        }
      }
    },
    "/addUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "integer"
        }
      ],
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EmployeeGet": {
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "page_num": {
          "type": "string"
        }
      }
    },
    "Employee": {
      "required": [
        "name",
        "surname",
        "birthday_date",
        "position",
        "salary"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "birthday_date": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "salary": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": [
        "name",
        "_id",
        "companies"
      ],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "isPublic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }

        },
        "companies": {
          "type": "array",
          "items": {
            "type": "string"
          }

        }

      }
    },
    "updateUser": {
      "required": [
        "name",
        "companies"
      ],
      "properties": {
        "isPublic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }

        },
        "companies": {
          "type": "array",
          "items": {
            "type": "string"
          }

        }

      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Employees": {
      "type": "array",
      "$ref": "#/definitions/Employee"
    }
  }
}